# -*- coding: utf-8 -*-
"""Zad1_B_DecisionTree_Tennis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fvKhsgLZfle5RFb5MpgqSdoxGwtw0eED
"""

import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier, export_graphviz
from sklearn.model_selection import train_test_split 
from sklearn import metrics
import pydotplus
from IPython.display import Image

"""Za≈Çadowanie danych"""

data=pd.read_csv('tennis.csv')
data.head()

"""Dane z tabeli (bez atrybutu **PlayTennis**) zapisujemy w kodowaniu **one-hot**"""

one_hot_data = pd.get_dummies(data[ ['Outlook','Temperature','Humidity','Wind'] ])
one_hot_data

"""Obiekt **DecisionTreeClassifier**"""

clf = DecisionTreeClassifier()

clf_train = clf.fit(one_hot_data, data['PlayTennis'])

"""Rysujemy drzewo decyzyjne"""

#print(export_graphviz(clf_train, None))

#Create Dot Data
dot_data = export_graphviz(clf_train, out_file=None, feature_names=list(one_hot_data.columns.values), 
                                class_names=['Yes', 'No'], rounded=True, filled=True)
graph = pydotplus.graph_from_dot_data(dot_data)

# Show graph
Image(graph.create_png())

"""Testujemy model dla samochodu o parametrach: **Sunny, Cool, High, Strong** (zakodowany jako one-hot)"""

prediction = clf_train.predict([[0,0,1,1,0,0,1,0,1,0]])
prediction


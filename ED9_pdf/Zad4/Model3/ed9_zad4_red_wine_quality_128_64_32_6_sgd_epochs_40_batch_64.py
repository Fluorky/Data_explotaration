# -*- coding: utf-8 -*-
"""ED9_zad4_red_wine_quality_128_64_32_6_sgd_epochs_40_batch_64.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OK4AMWoO1ZK86nCHmNf1_AW9oIzET2Gz
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow import keras
import pandas as pd
# %matplotlib inline
from sklearn.model_selection import *
from sklearn.preprocessing import *

data_frame = pd.read_csv('winequality-red.csv', parse_dates=True)

data_frame.head()

data_frame.groupby('quality').count().reset_index()

data_frame['quality'].replace(to_replace={3: 0, 4: 1, 5: 2, 6: 3, 7: 4, 8: 5}, inplace=True)

X = data_frame[['fixed acidity','volatile acidity','citric acid','residual sugar','chlorides',
'free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']]
Y = data_frame['quality']

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=24)

s = StandardScaler()
X_train = s.fit_transform(X_train)
X_test = s.transform(X_test)

model = tf.keras.models.Sequential([
  keras.layers.Dense(units=128, input_shape=(X_train.shape[1],), activation='relu'),
  keras.layers.Dense(units=64, activation='relu'),
  keras.layers.Dense(units=32, activation='relu'),
  keras.layers.Dense(units=6, activation='softmax')
])
model.compile(loss='sparse_categorical_crossentropy', optimizer='sgd',  metrics=['accuracy'])
model.summary()

h = model.fit(X_train, y_train, validation_data=(X_test,y_test), epochs=40, batch_size=64)

plt.plot(h.history['loss'], label='loss')
plt.plot(h.history['val_loss'], label='val_loss')
plt.legend()
plt.show()

ModelLoss, ModelAccuracy = model.evaluate(X_test, y_test)

print("Loss")
print(ModelLoss)
print("Accuracy")
print(ModelAccuracy)


# -*- coding: utf-8 -*-
"""ED_lab_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WWF96EaD2kaQkejvm-HDDXgS8_hAoPrn
"""

import numpy as np

"""Zad 1"""

#A = np.array([[[1],[1],[3],[-1]],[[2],[3],[5],[9]],[[-2],[3],[5],[7]],[[-7],[9],[2],[1]]])

A = np.array([[1,1,3,-1],[2,3,5,9],[-2,3,5,7],[-7,9,2,1]])

B= np.array([[3,5,-4,-2]])

C = np.array([[3,2,1],[3,1,-4],[-2,3,5],[-1,5,7]])

B1= B.reshape(4,1)

print(B1)

print(A*B)

print(A*B1)

print(np.dot(A,B1))

print(np.dot(A,C))

np.linalg.inv(A)

try:
  if(np.linalg.inv(B)):
   print("Da sie znalezc odwrotna")
   print(np.linalg.inv(B))
except:
    print("nie da się")

try:
  if(np.linalg.inv(C)):
   print("Da sie znalezc odwrotna")
   print(np.linalg.inv(C))
except:
    print("nie da się")

np.sum(A,axis=0)

np.sum(A,axis=1)

np.sum(B)

"""Zadanie 2"""

A = np.array([[2,4,5],[4,5,1],[5,1,3]])

np.linalg.eig(A)

"""Zadanie 3"""

import pandas as pd
data = pd.read_csv('simple_dataset.csv')
print(data)

s_copy = data.copy()
print(s_copy)

S1=pd.DataFrame(data=s_copy, index=[1],copy=True)
print(S1)

S2=pd.DataFrame(data=s_copy, index= [1,2],copy=True)
print(S2)

S3=pd.DataFrame(data=s_copy, index= [2,3],columns=['B','C','D'],copy=True)
print(S3)

S4=pd.DataFrame(data=s_copy,columns=['B','D'],copy=True)
print(S4)

"""Zadanie 4"""

data2 = pd.read_csv('president_heights.csv')
print(data2)

P1=pd.DataFrame(data=data2,columns=['height(cm)'],copy=True)
print(P1)

M=P1.mean()
print("Mean height")
print(M)

Std=P1.std()
print("Std")
print(Std)

Min=P1.min()
Max=P1.max()
print("Min")
print(Min)
print("Max")
print(Max)

Median=P1.median()
print("median")
print(Median)

import matplotlib.pyplot as plt
heights=P1.hist(xlabelsize=10)
#plt.hist(heights,10,color='red')
plt.title('Heights of US presidents')
plt.xlabel('Height')
plt.ylabel('Number of presidents')
plt.show()

"""Zadanie 5 """

import matplotlib.pyplot as plt

tab=np.random.normal(size=(2,1000))

plt.scatter(tab[0],tab[1])
plt.show()

number_of_points=1000
x_point = []
y_point = []
x_1=[]
y_1=[]

a=0.22
b=0.78

for i in range(number_of_points):
  x = np.random.normal(0.0,0.5)
  y = a*x+b+np.random.normal(0.0,0.1)
  x_point.append(x)
  y_point.append(y)
  x_1.append(1)
  y_1.append(1)

plt.scatter(x_point,y_point,c='b')
plt.show()

df = pd.DataFrame({"x" : x_point, "y" : y_point})
df.to_csv("punkty2D.csv", index=False)

"""Zadanie 6"""

x_s=np.array(x_point)
y_s=np.array(y_point)


x2=np.sum(x_s*x_s)
x1=np.sum(x_s)
x1sum=np.sum(x_1)
y1sum=np.sum(y_1)
xy=np.sum(x_s*y_s)
y1=np.sum(y_s)

print(x1)

M = np.array([[x2,x1],[x1,x1sum]])
print(M)

M_1=np.linalg.inv(M)
print(M_1)

N=np.array([[xy],[y1]])
print(N)

a,b = np.matmul(M_1,N)
print(a,b)

plt.scatter(x_s,y_s)
plt.plot(x_s,a*x_s+b,"black")
plt.show()

"""Zadanie 7"""

data3 = pd.read_csv('zadanie7dane.csv')

print(data3)

MA=pd.DataFrame(data3,columns=['A'])
print(MA)
MB=pd.DataFrame(data3,columns=['B'])
print(MB)
MC=pd.DataFrame(data3,columns=['C'])
print(MC)
MD=pd.DataFrame(data3,columns=['D'])
print(MD)

plt.scatter(MA,MB)
plt.show()

plt.scatter(MA,MC)
plt.show()

plt.scatter(MA,MD)
plt.show()

plt.scatter(MB,MA)
plt.show()

plt.scatter(MB,MC)
plt.show()

plt.scatter(MB,MD)
plt.show()

plt.scatter(MC,MA)
plt.show()

plt.scatter(MC,MB)
plt.show()

plt.scatter(MC,MD)
plt.show()

plt.scatter(MD,MA)
plt.show()

plt.scatter(MD,MB)
plt.show()

plt.scatter(MD,MC)
plt.show()

"""PARA A,D"""

number_of_points=700
x_point = []
y_point = []
x_1=[]
y_1=[]

for i in range(number_of_points):
  x_1.append(1)
  y_1.append(1)

x_s=np.array(MA)
y_s=np.array(MD)


x2=np.sum(x_s*x_s)
x1=np.sum(x_s)
x1sum=np.sum(x_1)
y1sum=np.sum(y_1)
xy=np.sum(x_s*y_s)
y1=np.sum(y_s)



print(x2,x1,x1sum,y1sum,xy,y1)

M = np.array([[x2,x1],[x1,x1sum]])

M_1=np.linalg.inv(M)

N=np.array([[xy],[y1]])
print(N)

a,b = np.matmul(M_1,N)
print(a,b)

plt.scatter(x_s,y_s)
plt.plot(x_s,a*x_s+b,"black")
plt.show()

"""Para B,C"""

number_of_points=700
x_point = []
y_point = []
x_1=[]
y_1=[]

for i in range(number_of_points):
  x_1.append(1)
  y_1.append(1)

x_s=np.array(MB)
y_s=np.array(MC)


x2=np.sum(x_s*x_s)
x1=np.sum(x_s)
x1sum=np.sum(x_1)
y1sum=np.sum(y_1)
xy=np.sum(x_s*y_s)
y1=np.sum(y_s)



print(x2,x1,x1sum,y1sum,xy,y1)

M = np.array([[x2,x1],[x1,x1sum]])

M_1=np.linalg.inv(M)

N=np.array([[xy],[y1]])
print(N)

a,b = np.matmul(M_1,N)
print(a,b)

plt.scatter(x_s,y_s)
plt.plot(x_s,a*x_s+b,"black")
plt.show()
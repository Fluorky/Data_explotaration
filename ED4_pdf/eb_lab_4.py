# -*- coding: utf-8 -*-
"""EB_lab_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y_zdtyYlGygSu15M5y9dPZUyszBE1UzA

Zad 1
"""

import pandas as pd
import numpy as np
data = pd.read_csv('Boston.csv')
print(data)

data.info()

P1=pd.DataFrame(data=data,columns=['crim'],copy=True)
print(P1)

np.array(data.loc[:,"rm"])

np.array(data.loc[:,"rm"]).reshape(-1,1)

"""Zadanie 2"""

data.describe()

for (columnName, columnData) in data.iteritems():
    print('Column Name : ', columnName)
    #print('Column Contents : ', columnData.values)
    print("Min")
    print(columnData.values.min())
    print("Max")
    print(columnData.values.max())
    print("Std")
    print(columnData.values.std())
    print("Mean")
    print(columnData.values.mean())

"""Zadanie 3"""

import matplotlib.pyplot as plt

rm=pd.DataFrame(data,columns=['rm'])
medv=pd.DataFrame(data,columns=['medv'])

plt.scatter(rm,medv)
plt.show()

number_of_points=506
x_point = []
y_point = []
x_1=[]
y_1=[]

for i in range(number_of_points):
  x_1.append(1)
  y_1.append(1)

x_s=np.array(rm)
y_s=np.array(medv)


x2=np.sum(x_s*x_s)
x1=np.sum(x_s)
x1sum=np.sum(x_1)
y1sum=np.sum(y_1)
xy=np.sum(x_s*y_s)
y1=np.sum(y_s)



print(x2,x1,x1sum,y1sum,xy,y1)

M = np.array([[x2,x1],[x1,x1sum]])

M_1=np.linalg.inv(M)

N=np.array([[xy],[y1]])
print(N)

a,b = np.matmul(M_1,N)
print(a,b)

plt.scatter(x_s,y_s)
plt.plot(x_s,a*x_s+b,"black")
plt.show()

"""Zadanie 4

Kowiariacja
"""

cov = data.iloc[:,1:].cov()
cov.style.background_gradient(cmap='coolwarm')

black=pd.DataFrame(data,columns=['black'])
crim=pd.DataFrame(data,columns=['crim'])

plt.scatter(black,crim)
plt.show()

"""Korelacja"""

cor = data.iloc[:,1:].corr()
cor.style.background_gradient(cmap='coolwarm')

rad=pd.DataFrame(data,columns=['rad'])
tax=pd.DataFrame(data,columns=['tax'])
nox=pd.DataFrame(data,columns=['nox'])
indus=pd.DataFrame(data,columns=['indus'])

plt.scatter(rad,tax)
plt.show()

for column in rad:
  rad[column]=rad[column] / rad[column].abs().max()

for column in tax:
  tax[column]=tax[column] / tax[column].abs().max()

print(rad)

plt.scatter(rad,tax)
plt.show()

print(nox)

print(indus)

plt.scatter(nox,indus)
plt.show()

number_of_points=506
x_point = []
y_point = []
x_1=[]
y_1=[]

for i in range(number_of_points):
  x_1.append(1)
  y_1.append(1)

print(rad)

print(tax)

x_s=np.array(nox)
y_s=np.array(indus)


x2=np.sum(x_s*x_s)
x1=np.sum(x_s)
x1sum=np.sum(x_1)
y1sum=np.sum(y_1)
xy=np.sum(x_s*y_s)
y1=np.sum(y_s)



print(x2,x1,x1sum,y1sum,xy,y1)

M = np.array([[x2,x1],[x1,x1sum]])

M_1=np.linalg.inv(M)

N=np.array([[xy],[y1]])
print(N)

a,b = np.matmul(M_1,N)
print(a,b)

plt.scatter(x_s,y_s)
plt.plot(x_s,a*x_s+b,"black")
plt.show()
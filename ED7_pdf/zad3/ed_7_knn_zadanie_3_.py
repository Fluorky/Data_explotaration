# -*- coding: utf-8 -*-
"""ED_7_kNN_zadanie_3_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ZeCkLDbACmT2-E0gUlRdK_1zf26qE53
"""

import pandas as pd
import numpy as np
import random

#dane - informacje o pogodzie
outlook=['Sunny','Sunny','Overcast','Rainy','Rainy','Rainy','Overcast','Sunny','Sunny','Rainy','Sunny','Overcast','Overcast','Rainy']
temp=['Hot','Hot','Hot','Mild','Cool','Cool','Cool','Mild','Cool','Mild','Mild','Mild','Hot','Mild']

#etykiety - czy pogoda jest odpowiednia na grÄ™ w tenisa?
play=['No','No','Yes','Yes','Yes','No','Yes','No','Yes','Yes','Yes','Yes','Yes','No']

"""Konwersja **danych kategorycznych** do **danych numerycznych**:


"""

from sklearn import preprocessing
le = preprocessing.LabelEncoder()

#Sunny-2,Rainy-1,Overcast-0

outlook_encoded=le.fit_transform(outlook)
temp_encoded=le.fit_transform(temp)

print(outlook_encoded)
print(temp_encoded)

"""# Nowa sekcja

Konersja etykiet do **danych numerycznych**:
"""

#No-0,Yes-1

label=le.fit_transform(play)
print(label)

"""Outlook + temp"""

data=list(zip(outlook_encoded,temp_encoded))
print(data)

from sklearn.neighbors import KNeighborsClassifier

dataFile = pd.read_csv('tenis.csv')

dataFile.head()

"""A"""

from sklearn.neighbors import KNeighborsClassifier

neigh = KNeighborsClassifier(n_neighbors=3)
neigh.fit(data,label)

point = np.array([[2,2]])

print(neigh.predict(point))

"""C"""

outlook =  list(dataFile["Outlook"])
print(outlook)

temperature =  list(dataFile["Temperature"])
print(temperature)

humidity =  list(dataFile["Humidity"])
print(humidity)

wind =  list(dataFile["Wind"])
print(wind)

play =  list(dataFile["PlayTennis"])
print(play)

outlook_encoded=le.fit_transform(outlook)
temp_encoded=le.fit_transform(temperature)
humidity_encoded=le.fit_transform(humidity)
wind_encoded=le.fit_transform(wind)

data=list(zip(outlook_encoded,temp_encoded,humidity_encoded,wind_encoded))
print(data)

label=le.fit_transform(play)
print(label)

neigh = KNeighborsClassifier(n_neighbors=3)
neigh.fit(data,label)

point = np.array([[2,0,0,0]])

print(neigh.predict(point))


# -*- coding: utf-8 -*-
"""ED7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pt1J2ebh4icP47laiy6mvmW27znQRoa2

Zad1
"""

import pandas as pd
import numpy as np

data = pd.read_csv('penguins.csv')
data

data.info()

data.describe()

dataset = data[["bill_length_mm", "flipper_length_mm"]]

dataset = dataset.dropna(axis=0)
dataset

import matplotlib.pyplot as plt
from scipy.cluster import hierarchy

clusters = hierarchy.linkage(dataset, method="complete")
plt.figure(figsize=(30, 10))
dendrogram = hierarchy.dendrogram(clusters)
#plt.axhline(6, color='red');

"""Liczba klastrów: 2"""

clusters = hierarchy.linkage(dataset, method="average")
plt.figure(figsize=(30, 10))
dendrogram = hierarchy.dendrogram(clusters)
#plt.axhline(6, color='red');

"""Liczba klastrów: 3"""

clusters = hierarchy.linkage(dataset, method="single")
plt.figure(figsize=(30, 10))
dendrogram = hierarchy.dendrogram(clusters)
#plt.axhline(6, color='red');

"""Liczba klastrów:  1"""

clusters = hierarchy.linkage(dataset, method="ward")
plt.figure(figsize=(30, 10))
dendrogram = hierarchy.dendrogram(clusters)
#plt.axhline(6, color='red');

"""Liczba klastrów:  2"""

from sklearn.cluster import AgglomerativeClustering

k = 3
model = AgglomerativeClustering(linkage='complete',n_clusters=k,affinity='euclidean', distance_threshold=None) 
model.fit(dataset)

model.labels_

complete=model.labels_

k = 3
model = AgglomerativeClustering(linkage='average',n_clusters=k,affinity='euclidean', distance_threshold=None) 
model.fit(dataset)

model.labels_

average=model.labels_

k = 3
model = AgglomerativeClustering(linkage='single',n_clusters=k,affinity='euclidean', distance_threshold=None) 
model.fit(dataset)

model.labels_

single=model.labels_

k = 3
model = AgglomerativeClustering(linkage='ward',n_clusters=k,affinity='euclidean', distance_threshold=None) 
model.fit(dataset)

model.labels_

ward=model.labels_

import seaborn as sns

fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15,5))
sns.scatterplot(ax=axes[0], data=dataset, x='bill_length_mm', y='flipper_length_mm').set_title('Bez klastrów')
sns.scatterplot(ax=axes[1], data=dataset, x='bill_length_mm', y='flipper_length_mm', hue=complete).set_title('Z klastrami');

fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15,5))
sns.scatterplot(ax=axes[0], data=dataset, x='bill_length_mm', y='flipper_length_mm').set_title('Bez klastrów')
sns.scatterplot(ax=axes[1], data=dataset, x='bill_length_mm', y='flipper_length_mm', hue=average).set_title('Z klastrami');

fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15,5))
sns.scatterplot(ax=axes[0], data=dataset, x='bill_length_mm', y='flipper_length_mm').set_title('Bez klastrów')
sns.scatterplot(ax=axes[1], data=dataset, x='bill_length_mm', y='flipper_length_mm', hue=single).set_title('Z klastrami');

fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15,5))
sns.scatterplot(ax=axes[0], data=dataset, x='bill_length_mm', y='flipper_length_mm').set_title('Bez klastrów')
sns.scatterplot(ax=axes[1], data=dataset, x='bill_length_mm', y='flipper_length_mm', hue=ward).set_title('Z klastrami');